@model TeacherOrganizer.Models.RegLogModels.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<form id="registerForm">
    <div class="form-group">
        <label for="Username">Username</label>
        <input type="text" id="Username" name="Username" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <input type="email" id="Email" name="Email" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <input type="password" id="Password" name="Password" class="form-control" required />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>


<div>
    <a asp-action="Login">Already have an account? Login</a>
</div>

<script>
      document.getElementById('registerForm').addEventListener('submit', function (event) {
          event.preventDefault();

          // Получаем данные из формы
          const formData = {
              Username: document.getElementById('Username').value,
              Email: document.getElementById('Email').value,
              Password: document.getElementById('Password').value
          };

          // Отправка данных через fetch
        fetch('/api/Auth/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })

              .then(response => response.json())
              .then(data => {
                  if (data.message) {
                      alert(data.message);  
                      window.location.href = '/AuthView/Login';
                  } else {
                      alert('Registration failed');
                  }
              })
              .catch(error => {
                  console.error('Error:', error);
                  alert('Error during registration');
              });
      });

</script></>